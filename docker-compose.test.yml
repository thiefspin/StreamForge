version: '3.8'

services:
  # Zookeeper for Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    hostname: zookeeper
    container_name: streamforge-zookeeper-test
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - streamforge-test

  # Kafka broker
  kafka:
    image: confluentinc/cp-kafka:7.5.0
    hostname: kafka
    container_name: streamforge-kafka-test
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    networks:
      - streamforge-test

  # PostgreSQL for testing
  postgres-test:
    image: postgres:15-alpine
    container_name: streamforge-postgres-test
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: streamforge_test
      POSTGRES_USER: streamforge
      POSTGRES_PASSWORD: streamforge_test
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - postgres-test-data:/var/lib/postgresql/data
    networks:
      - streamforge-test
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U streamforge -d streamforge_test"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Kafka UI for debugging (optional)
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: streamforge-kafka-ui-test
    depends_on:
      - kafka
    ports:
      - "8081:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    networks:
      - streamforge-test

  # Create topics
  kafka-setup:
    image: confluentinc/cp-kafka:7.5.0
    container_name: streamforge-kafka-setup
    depends_on:
      - kafka
    command: |
      bash -c "
        echo 'Waiting for Kafka to be ready...'
        cub kafka-ready -b kafka:29092 1 40

        echo 'Creating topics...'
        kafka-topics --create --if-not-exists --bootstrap-server kafka:29092 --partitions 3 --replication-factor 1 --topic events
        kafka-topics --create --if-not-exists --bootstrap-server kafka:29092 --partitions 2 --replication-factor 1 --topic events-dlq
        kafka-topics --create --if-not-exists --bootstrap-server kafka:29092 --partitions 3 --replication-factor 1 --topic test-events
        kafka-topics --create --if-not-exists --bootstrap-server kafka:29092 --partitions 2 --replication-factor 1 --topic test-events-dlq

        echo 'Topics created:'
        kafka-topics --list --bootstrap-server kafka:29092
      "
    networks:
      - streamforge-test

networks:
  streamforge-test:
    driver: bridge

volumes:
  postgres-test-data:
